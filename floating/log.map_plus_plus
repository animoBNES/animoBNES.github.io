cd OpenFOAM/
cd a1702a01-v2212/
rm -rf map-plus-plus
git clone https://bitbucket.org/mmasciola/map-plus-plus.git
cd map-plus-plus/
cd src/

module purge
module load craype-mic-knl intel/19.0.5 impi/19.0.5 lapack


module load gcc/7.2.0 craype-mic-knl
make

lapack/3.7.0

module load intel/19.1.2 craype-mic-knl lapack/3.7.0
make


module load intel/19.1.2 craype-x86-skylake lapack/3.7.0



module load intel/19.0.5 impi/19.0.5
module load lapack
#       You need module(s):
#                     intel : 17.0.5, 18.0.3, 19.0.5, 19.1.2
#                     gcc   : 6.1.0, 7.2.0, 8.3.0
#                     pgi   : 18.10, 19.1
#                 cpu_types : craype-mic-knl or craype-x86-skylake

        lapack/3.7.0 Load Error: CRAY_CPU_TARGET env vars were not properly defined
        lapack/3.7.0 is need a CRAY_CPU_TARGET


        This module is for use of lapack/3.7.0
        This library was built with all compilers

        Use example:
            $ module load intel/17.0.5 craype-mic-knl lapack/3.7.0
            $ module load intel/17.0.5 craype-x86-skylake lapack/3.7.0

            $ module load intel/18.0.3 craype-mic-knl lapack/3.7.0
            $ module load intel/18.0.3 craype-x86-skylake lapack/3.7.0

            $ module load intel/19.0.5 craype-mic-knl lapack/3.7.0
            $ module load intel/19.0.5 craype-x86-skylake lapack/3.7.0

            $ module load intel/19.1.2 craype-mic-knl lapack/3.7.0
            $ module load intel/19.1.2 craype-x86-skylake lapack/3.7.0

            $ module load gcc/6.1.0 craype-mic-knl lapack/3.7.0
            $ module load gcc/6.1.0 craype-x86-skylake lapack/3.7.0

            $ module load gcc/7.2.0 craype-mic-knl lapack/3.7.0
            $ module load gcc/7.2.0 craype-x86-skylake lapack/3.7.0

            $ module load gcc/8.3.0 craype-mic-knl lapack/3.7.0
            $ module load gcc/8.3.0 craype-x86-skylake lapack/3.7.0

            $ module load pgi/18.10 craype-mic-knl lapack/3.7.0
            $ module load pgi/18.10 craype-x86-skylake lapack/3.7.0

            $ module load pgi/19.1 craype-mic-knl lapack/3.7.0
            $ module load pgi/19.1 craype-x86-skylake lapack/3.7.0



        {cpu_types}
        'craype-mic-knl' 'craype-x86-skylake'

        {libraries}
        'CDO/1.8.2' 'hdf4/4.2.13' 'hdf5/1.10.2' 'lapack/3.7.0' 'libxc/4.0.0' 'libxc/4.3.4' 'NCO/4.7.4' 'NCO/4.9.2' 'ncl/6.5.0' 'ncview/2.1.7' 'netcdf/4.6.1'

[a1702a01@login05 src]$ make
gcc -m64 -g -shared -llapacke -o libmap-1.30.00.so  lmder.o dpmpar.o lmpar.o qrsolv.o enorm.o enorm_u.o qrfac.o simclist.o bstrlib.o bstraux.o freedata.o mapinit.o maperror.o lineroutines.o numeric.o outputstream.o mapapi.o lmroutines.o jacobian.o residual.o  -lm -llapacke
/usr/bin/ld: cannot find -llapacke
/usr/bin/ld: cannot find -llapacke
collect2: error: ld returned 1 exit status
make: *** [all] Error 1
[a1702a01@login05 src]$ cd ..
[a1702a01@login05 map-plus-plus]$ cd ..
[a1702a01@login05 a1702a01-v2212]$ rm -rf map-plus-plus/
[a1702a01@login05 a1702a01-v2212]$ git clone https://bitbucket.org/mmasciola/map-plus-plus.git
Cloning into 'map-plus-plus'...
remote: Enumerating objects: 2975, done.
remote: Counting objects: 100% (2975/2975), done.
remote: Compressing objects: 100% (874/874), done.
remote: Total 2975 (delta 2225), reused 2838 (delta 2096), pack-reused 0
Receiving objects: 100% (2975/2975), 4.84 MiB | 1.51 MiB/s, done.
Resolving deltas: 100% (2225/2225), done.
[a1702a01@login05 a1702a01-v2212]$ cd m
map-plus-plus/ MoorDyn/
[a1702a01@login05 a1702a01-v2212]$ cd map-plus-plus/src/
[a1702a01@login05 src]$ module purge

        'craype-mic-knl' dependent modulefiles were removed

[a1702a01@login05 src]$ module load intel/19.1.2 craype-mic-knl lapack/3.7.0

        'intel/19.1.2' supports the following modules

        {MPI}
        'impi/19.1.2' 'mvapich2/2.3.1' 'mvapich2/2.3.6' 'openmpi/3.1.0'

        {cpu_types}
        'craype-mic-knl' 'craype-x86-skylake'

        {libraries}
        'CDO/1.8.2' 'hdf4/4.2.13' 'hdf5/1.10.2' 'lapack/3.7.0' 'libxc/4.0.0' 'libxc/4.3.4' 'NCO/4.7.4' 'NCO/4.9.2' 'ncl/6.5.0' 'ncview/2.1.7' 'netcdf/4.6.1'

[a1702a01@login05 src]$ make





        $(DEL_CMD) *.$(LIB_EXT) *.o *~

memcheck:
        valgrind --tool=memcheck --leak-check=yes python -E -tt ./main.py
[a1702a01@login05 src]$ make
gcc -m64 -g -shared -llapacke -o libmap-1.30.00.  lmder.o dpmpar.o lmpar.o qrsolv.o enorm.o enorm_u.o qrfac.o simclist.o bstrlib.o bstraux.o freedata.o mapinit.o maperror.o lineroutines.o numeric.o outputstream.o mapapi.o lmroutines.o jacobian.o residual.o  -lm -llapacke
/usr/bin/ld: cannot find -llapacke
/usr/bin/ld: cannot find -llapacke
collect2: error: ld returned 1 exit status




# makefile

MAP_VER:=1.30.00

BITS = -m64
PLATFORM = $(shell uname -s)
VPATH = cminpack:simclist:bstring:lapack

# STATIC_BUILD=NO # sb
# STATIC_BUILD=YES # sb

ifeq ($(OS),Windows_NT)
  DEL_CMD   = del
  LIB_EXT   = dll
  CFLAGS    = $(BITS) -g -std=c99 -DMAP_DLL_EXPORTS -DCMINPACK_NO_DLL  -DNDEBUG -D_WINDOWS -D_USRDLL -D_MINGW
  LDFLAGS   = $(BITS) -g -shared -Wl,--export-all-symbols
  LIB_FLAGS :=
else
  PLATFORM = $(shell uname -s)
  DEL_CMD   = rm -rf
  GIT_VERSION := $(shell git describe --abbrev=4 --dirty --always)

  ifeq ($(PLATFORM),Darwin)
    LIB_EXT   = dylib
    CC_TOOLS  = clang
    CFLAGS    = -g -O1 -fno-omit-frame-pointer -fPIC -D DEBUG -Icminpack -Isimclist
    LDFLAGS   = -g -dynamiclib
    LIB_FLAGS := -lm
  else ifeq ($(PLATFORM),Linux)
    #LIB_EXT   = so
    CC_TOOLS  = gcc
    #CFLAGS    = -g -O1 -fsanitize=address -fno-omit-frame-pointer -fPIC -D DEBUG -DGITVERSION=\"$(GIT_VERSION)\" -Icminpack -Isimclist
    #CFLAGS    = -g -fPIC -std=c99 -Wuninitialized -Wall -D DEBUG -DGITVERSION=\"$(GIT_VERSION)\"
    CFLAGS    = $(BITS) -g -fPIC -std=c99 -D DEBUG -DGITVERSION=\"$(GIT_VERSION)\" -D WITH_LAPACK
    LDFLAGS   = $(BITS) -g -shared -llapacke
    LIB_FLAGS := -lm -llapacke
  endif
endif

DEBUG     =
OBJ       = lmder.o \
        dpmpar.o \
        lmpar.o \
        qrsolv.o \
        enorm.o \
        enorm_u.o \
        qrfac.o \
        simclist.o \
        bstrlib.o \
        bstraux.o \
        freedata.o \
        mapinit.o \
        maperror.o \
        lineroutines.o \
        numeric.o \
        outputstream.o \
        mapapi.o \
        lmroutines.o \
        jacobian.o \
        residual.o \


all : $(OBJ)
        $(CC_TOOLS) $(LDFLAGS) -o libmap-$(MAP_VER).$(LIB_EXT) $(DEBUG) $(OBJ) $(LIB_FLAGS)

.c.o :
        $(CC_TOOLS) -c $(CFLAGS) $<

clean:
        $(DEL_CMD) *.$(LIB_EXT) *.o *~

memcheck:
        valgrind --tool=memcheck --leak-check=yes python -E -tt ./main.py

